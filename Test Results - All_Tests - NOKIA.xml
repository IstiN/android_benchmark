<?xml version="1.0" encoding="UTF-8"?><testrun duration="1604949" footerText="Generated by Android Studio on 11/12/15 12:17 AM" name="All Tests">
    <count name="total" value="148"/>
    <count name="error" value="5"/>
    <count name="passed" value="143"/>
    <suite duration="72537" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_SQLITE]">
        <test duration="11472" status="passed" name="testProcess10000"/>
        <test duration="59309" status="passed" name="testProcessLarge"/>
        <test duration="1360" status="passed" name="testProcess1000"/>
        <test duration="396" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="56185" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_REALM]">
        <test duration="8209" status="passed" name="testProcess10000"/>
        <test duration="46333" status="passed" name="testProcessLarge"/>
        <test duration="1278" status="passed" name="testProcess1000"/>
        <test duration="365" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="77290" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_GREENDAO]">
        <test duration="9008" status="passed" name="testProcess10000"/>
        <test duration="66644" status="passed" name="testProcessLarge"/>
        <test duration="1269" status="passed" name="testProcess1000"/>
        <test duration="369" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="71827" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_ORMLITE]">
        <test duration="10298" status="passed" name="testProcess10000"/>
        <test duration="59810" status="passed" name="testProcessLarge"/>
        <test duration="1314" status="passed" name="testProcess1000"/>
        <test duration="405" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="74672" status="error" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_XCORE]">
        <test duration="10036" status="passed" name="testProcess10000"/>
        <test duration="63173" status="error" name="testProcessLarge">
            <output type="stderr">junit.framework.AssertionFailedError: expected:&amp;lt;50000&amp;gt; but was:&amp;lt;10000&amp;gt;&#13;
at junit.framework.Assert.fail(Assert.java:50)&#13;
at junit.framework.Assert.failNotEquals(Assert.java:287)&#13;
at junit.framework.Assert.assertEquals(Assert.java:67)&#13;
at junit.framework.Assert.assertEquals(Assert.java:199)&#13;
at junit.framework.Assert.assertEquals(Assert.java:205)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcess(MemberBenchmark.java:78)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcessLarge(MemberBenchmark.java:64)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:525)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1793)&#13;
</output>
        </test>
        <test duration="1213" status="passed" name="testProcess1000"/>
        <test duration="250" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="96441" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_SQLITE]">
        <test duration="14027" status="passed" name="testProcess10000"/>
        <test duration="80480" status="passed" name="testProcessLarge"/>
        <test duration="1572" status="passed" name="testProcess1000"/>
        <test duration="362" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="83268" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_REALM]">
        <test duration="11597" status="passed" name="testProcess10000"/>
        <test duration="70064" status="passed" name="testProcessLarge"/>
        <test duration="1357" status="passed" name="testProcess1000"/>
        <test duration="250" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="105987" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_GREENDAO]">
        <test duration="12076" status="passed" name="testProcess10000"/>
        <test duration="92213" status="passed" name="testProcessLarge"/>
        <test duration="1384" status="passed" name="testProcess1000"/>
        <test duration="314" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="99111" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_ORMLITE]">
        <test duration="14061" status="passed" name="testProcess10000"/>
        <test duration="82979" status="passed" name="testProcessLarge"/>
        <test duration="1738" status="passed" name="testProcess1000"/>
        <test duration="333" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="101667" status="error" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_XCORE]">
        <test duration="13820" status="passed" name="testProcess10000"/>
        <test duration="86163" status="error" name="testProcessLarge">
            <output type="stderr">junit.framework.AssertionFailedError: expected:&amp;lt;50000&amp;gt; but was:&amp;lt;10000&amp;gt;&#13;
at junit.framework.Assert.fail(Assert.java:50)&#13;
at junit.framework.Assert.failNotEquals(Assert.java:287)&#13;
at junit.framework.Assert.assertEquals(Assert.java:67)&#13;
at junit.framework.Assert.assertEquals(Assert.java:199)&#13;
at junit.framework.Assert.assertEquals(Assert.java:205)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcess(MemberBenchmark.java:78)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcessLarge(MemberBenchmark.java:64)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:525)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1793)&#13;
</output>
        </test>
        <test duration="1457" status="passed" name="testProcess1000"/>
        <test duration="227" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="107711" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_SQLITE]">
        <test duration="16860" status="passed" name="testProcess10000"/>
        <test duration="88724" status="passed" name="testProcessLarge"/>
        <test duration="1737" status="passed" name="testProcess1000"/>
        <test duration="390" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="97104" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_REALM]">
        <test duration="14904" status="passed" name="testProcess10000"/>
        <test duration="80231" status="passed" name="testProcessLarge"/>
        <test duration="1625" status="passed" name="testProcess1000"/>
        <test duration="344" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="123896" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_GREENDAO]">
        <test duration="15631" status="passed" name="testProcess10000"/>
        <test duration="106177" status="passed" name="testProcessLarge"/>
        <test duration="1721" status="passed" name="testProcess1000"/>
        <test duration="367" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="112126" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_ORMLITE]">
        <test duration="17336" status="passed" name="testProcess10000"/>
        <test duration="92532" status="passed" name="testProcessLarge"/>
        <test duration="1884" status="passed" name="testProcess1000"/>
        <test duration="374" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="122977" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.X_CORE]">
        <test duration="19108" status="passed" name="testProcess10000"/>
        <test duration="101569" status="passed" name="testProcessLarge"/>
        <test duration="2024" status="passed" name="testProcess1000"/>
        <test duration="276" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="60564" status="error" name="com.epam.android.benchmark.parser.ParserBenchmark[.MOSHI]">
        <test duration="7681" status="passed" name="testParse10000"/>
        <test duration="51620" status="passed" name="testParseLittleMemory50000"/>
        <test duration="895" status="passed" name="testParse1000"/>
        <test duration="29" status="passed" name="testInit"/>
        <test duration="174" status="error" name="testParseLittleMemory100000">
            <output type="stderr">java.io.FileNotFoundException: /storage/emulated/0/benchmark/source_100000.json: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.IoBridge.open(IoBridge.java:409)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:105)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStreamFromFile(TestUtils.java:44)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStream(TestUtils.java:35)&#13;
at com.epam.android.benchmark.parser.ParserBenchmark.testParseLittleMemory100000(ParserBenchmark.java:62)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:525)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1793)&#13;
Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.Posix.open(Native Method)&#13;
at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)&#13;
at libcore.io.IoBridge.open(IoBridge.java:393)&#13;
... 42 more&#13;
</output>
        </test>
        <test duration="165" status="passed" name="testParse100"/>
    </suite>
    <suite duration="33148" status="error" name="com.epam.android.benchmark.parser.ParserBenchmark[.JACKSON]">
        <test duration="4166" status="passed" name="testParse10000"/>
        <test duration="28081" status="passed" name="testParseLittleMemory50000"/>
        <test duration="623" status="passed" name="testParse1000"/>
        <test duration="0" status="passed" name="testInit"/>
        <test duration="85" status="error" name="testParseLittleMemory100000">
            <output type="stderr">java.io.FileNotFoundException: /storage/emulated/0/benchmark/source_100000.json: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.IoBridge.open(IoBridge.java:409)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:105)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStreamFromFile(TestUtils.java:44)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStream(TestUtils.java:35)&#13;
at com.epam.android.benchmark.parser.ParserBenchmark.testParseLittleMemory100000(ParserBenchmark.java:62)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:525)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1793)&#13;
Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.Posix.open(Native Method)&#13;
at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)&#13;
at libcore.io.IoBridge.open(IoBridge.java:393)&#13;
... 42 more&#13;
</output>
        </test>
        <test duration="193" status="passed" name="testParse100"/>
    </suite>
    <suite duration="72503" status="error" name="com.epam.android.benchmark.parser.ParserBenchmark[.XCORE]">
        <test duration="10510" status="passed" name="testParse10000"/>
        <test duration="60498" status="passed" name="testParseLittleMemory50000"/>
        <test duration="1175" status="passed" name="testParse1000"/>
        <test duration="0" status="passed" name="testInit"/>
        <test duration="110" status="error" name="testParseLittleMemory100000">
            <output type="stderr">java.io.FileNotFoundException: /storage/emulated/0/benchmark/source_100000.json: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.IoBridge.open(IoBridge.java:409)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:105)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStreamFromFile(TestUtils.java:44)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStream(TestUtils.java:35)&#13;
at com.epam.android.benchmark.parser.ParserBenchmark.testParseLittleMemory100000(ParserBenchmark.java:62)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:525)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1793)&#13;
Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.Posix.open(Native Method)&#13;
at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)&#13;
at libcore.io.IoBridge.open(IoBridge.java:393)&#13;
... 42 more&#13;
</output>
        </test>
        <test duration="210" status="passed" name="testParse100"/>
    </suite>
    <suite duration="10012" status="passed" name="com.epam.android.benchmark.parser.ParserTest[.MOSHI]">
        <test duration="7809" status="passed" name="testCount10000"/>
        <test duration="132" status="passed" name="testIndexesCorrect"/>
        <test duration="1035" status="passed" name="testParserListener"/>
        <test duration="162" status="passed" name="testCount100"/>
        <test duration="874" status="passed" name="testCount1000"/>
    </suite>
    <suite duration="5898" status="passed" name="com.epam.android.benchmark.parser.ParserTest[.JACKSON]">
        <test duration="4282" status="passed" name="testCount10000"/>
        <test duration="143" status="passed" name="testIndexesCorrect"/>
        <test duration="667" status="passed" name="testParserListener"/>
        <test duration="195" status="passed" name="testCount100"/>
        <test duration="611" status="passed" name="testCount1000"/>
    </suite>
    <suite duration="13234" status="passed" name="com.epam.android.benchmark.parser.ParserTest[.XCORE]">
        <test duration="10475" status="passed" name="testCount10000"/>
        <test duration="245" status="passed" name="testIndexesCorrect"/>
        <test duration="1228" status="passed" name="testParserListener"/>
        <test duration="192" status="passed" name="testCount100"/>
        <test duration="1094" status="passed" name="testCount1000"/>
    </suite>
    <suite duration="944" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.SIMPLE]">
        <test duration="352" status="passed" name="testGet"/>
        <test duration="27" status="passed" name="testInit"/>
        <test duration="297" status="passed" name="testSave"/>
        <test duration="268" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="1245" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.ORMLITE]">
        <test duration="434" status="passed" name="testGet"/>
        <test duration="26" status="passed" name="testInit"/>
        <test duration="379" status="passed" name="testSave"/>
        <test duration="406" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="1050" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.REALM]">
        <test duration="346" status="passed" name="testGet"/>
        <test duration="28" status="passed" name="testInit"/>
        <test duration="319" status="passed" name="testSave"/>
        <test duration="357" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="839" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.GREEN_DAO]">
        <test duration="332" status="passed" name="testGet"/>
        <test duration="26" status="passed" name="testInit"/>
        <test duration="214" status="passed" name="testSave"/>
        <test duration="267" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="1299" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.XCORE]">
        <test duration="448" status="passed" name="testGet"/>
        <test duration="0" status="passed" name="testInit"/>
        <test duration="426" status="passed" name="testSave"/>
        <test duration="425" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="318" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.SIMPLE]">
        <test duration="53" status="passed" name="testFilterActive"/>
        <test duration="51" status="passed" name="testGetFirst"/>
        <test duration="26" status="passed" name="testFilterIndex"/>
        <test duration="53" status="passed" name="testClear"/>
        <test duration="27" status="passed" name="testSize"/>
        <test duration="56" status="passed" name="testSaveTwice"/>
        <test duration="52" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="343" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.ORMLITE]">
        <test duration="27" status="passed" name="testFilterActive"/>
        <test duration="25" status="passed" name="testGetFirst"/>
        <test duration="26" status="passed" name="testFilterIndex"/>
        <test duration="55" status="passed" name="testClear"/>
        <test duration="26" status="passed" name="testSize"/>
        <test duration="131" status="passed" name="testSaveTwice"/>
        <test duration="53" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="377" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.REALM]">
        <test duration="56" status="passed" name="testFilterActive"/>
        <test duration="53" status="passed" name="testGetFirst"/>
        <test duration="51" status="passed" name="testFilterIndex"/>
        <test duration="78" status="passed" name="testClear"/>
        <test duration="30" status="passed" name="testSize"/>
        <test duration="83" status="passed" name="testSaveTwice"/>
        <test duration="26" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="291" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.GREEN_DAO]">
        <test duration="29" status="passed" name="testFilterActive"/>
        <test duration="54" status="passed" name="testGetFirst"/>
        <test duration="27" status="passed" name="testFilterIndex"/>
        <test duration="51" status="passed" name="testClear"/>
        <test duration="26" status="passed" name="testSize"/>
        <test duration="77" status="passed" name="testSaveTwice"/>
        <test duration="27" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="85" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.XCORE]">
        <test duration="0" status="passed" name="testFilterActive"/>
        <test duration="27" status="passed" name="testGetFirst"/>
        <test duration="0" status="passed" name="testFilterIndex"/>
        <test duration="28" status="passed" name="testClear"/>
        <test duration="0" status="passed" name="testSize"/>
        <test duration="30" status="passed" name="testSaveTwice"/>
        <test duration="0" status="passed" name="testFilterNullName"/>
    </suite>
</testrun>
