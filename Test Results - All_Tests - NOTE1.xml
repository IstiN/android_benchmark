<?xml version="1.0" encoding="UTF-8"?><testrun duration="2696602" footerText="Generated by Android Studio on 11/12/15 9:41 AM" name="All Tests">
    <count name="total" value="148"/>
    <count name="error" value="5"/>
    <count name="passed" value="143"/>
    <suite duration="120455" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_SQLITE]">
        <test duration="18812" status="passed" name="testProcess10000"/>
        <test duration="97842" status="passed" name="testProcessLarge"/>
        <test duration="2663" status="passed" name="testProcess1000"/>
        <test duration="1138" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="86764" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_REALM]">
        <test duration="13592" status="passed" name="testProcess10000"/>
        <test duration="70328" status="passed" name="testProcessLarge"/>
        <test duration="2010" status="passed" name="testProcess1000"/>
        <test duration="834" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="149156" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_GREENDAO]">
        <test duration="16782" status="passed" name="testProcess10000"/>
        <test duration="128943" status="passed" name="testProcessLarge"/>
        <test duration="2456" status="passed" name="testProcess1000"/>
        <test duration="975" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="124030" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_ORMLITE]">
        <test duration="18331" status="passed" name="testProcess10000"/>
        <test duration="102269" status="passed" name="testProcessLarge"/>
        <test duration="2502" status="passed" name="testProcess1000"/>
        <test duration="928" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="128118" status="error" name="com.epam.android.benchmark.MemberBenchmark[.JACKSON_XCORE]">
        <test duration="16484" status="passed" name="testProcess10000"/>
        <test duration="108664" status="error" name="testProcessLarge">
            <output type="stderr">junit.framework.AssertionFailedError: expected:&amp;lt;50000&amp;gt; but was:&amp;lt;10000&amp;gt;&#13;
at junit.framework.Assert.fail(Assert.java:47)&#13;
at junit.framework.Assert.failNotEquals(Assert.java:282)&#13;
at junit.framework.Assert.assertEquals(Assert.java:64)&#13;
at junit.framework.Assert.assertEquals(Assert.java:201)&#13;
at junit.framework.Assert.assertEquals(Assert.java:207)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcess(MemberBenchmark.java:78)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcessLarge(MemberBenchmark.java:64)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:511)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1574)&#13;
</output>
        </test>
        <test duration="2126" status="passed" name="testProcess1000"/>
        <test duration="844" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="161640" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_SQLITE]">
        <test duration="23528" status="passed" name="testProcess10000"/>
        <test duration="133889" status="passed" name="testProcessLarge"/>
        <test duration="3125" status="passed" name="testProcess1000"/>
        <test duration="1098" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="130304" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_REALM]">
        <test duration="20551" status="passed" name="testProcess10000"/>
        <test duration="106615" status="passed" name="testProcessLarge"/>
        <test duration="2439" status="passed" name="testProcess1000"/>
        <test duration="699" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="189753" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_GREENDAO]">
        <test duration="20067" status="passed" name="testProcess10000"/>
        <test duration="166088" status="passed" name="testProcessLarge"/>
        <test duration="2738" status="passed" name="testProcess1000"/>
        <test duration="860" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="165309" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_ORMLITE]">
        <test duration="24163" status="passed" name="testProcess10000"/>
        <test duration="141146" status="passed" name="testProcessLarge"/>
        <test duration="0" status="passed" name="testProcess1000"/>
        <test duration="0" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="169650" status="error" name="com.epam.android.benchmark.MemberBenchmark[.MOSHI_XCORE]">
        <test duration="18318" status="passed" name="testProcess10000"/>
        <test duration="147800" status="error" name="testProcessLarge">
            <output type="stderr">junit.framework.AssertionFailedError: expected:&amp;lt;50000&amp;gt; but was:&amp;lt;10000&amp;gt;&#13;
at junit.framework.Assert.fail(Assert.java:47)&#13;
at junit.framework.Assert.failNotEquals(Assert.java:282)&#13;
at junit.framework.Assert.assertEquals(Assert.java:64)&#13;
at junit.framework.Assert.assertEquals(Assert.java:201)&#13;
at junit.framework.Assert.assertEquals(Assert.java:207)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcess(MemberBenchmark.java:78)&#13;
at com.epam.android.benchmark.MemberBenchmark.testProcessLarge(MemberBenchmark.java:64)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:511)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1574)&#13;
</output>
        </test>
        <test duration="2726" status="passed" name="testProcess1000"/>
        <test duration="806" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="183805" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_SQLITE]">
        <test duration="29780" status="passed" name="testProcess10000"/>
        <test duration="149443" status="passed" name="testProcessLarge"/>
        <test duration="3421" status="passed" name="testProcess1000"/>
        <test duration="1161" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="157380" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_REALM]">
        <test duration="24878" status="passed" name="testProcess10000"/>
        <test duration="128802" status="passed" name="testProcessLarge"/>
        <test duration="2878" status="passed" name="testProcess1000"/>
        <test duration="822" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="226732" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_GREENDAO]">
        <test duration="26659" status="passed" name="testProcess10000"/>
        <test duration="196120" status="passed" name="testProcessLarge"/>
        <test duration="3096" status="passed" name="testProcess1000"/>
        <test duration="857" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="188571" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.XCORE_ORMLITE]">
        <test duration="29712" status="passed" name="testProcess10000"/>
        <test duration="154489" status="passed" name="testProcessLarge"/>
        <test duration="3450" status="passed" name="testProcess1000"/>
        <test duration="920" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="186160" status="passed" name="com.epam.android.benchmark.MemberBenchmark[.X_CORE]">
        <test duration="30798" status="passed" name="testProcess10000"/>
        <test duration="150684" status="passed" name="testProcessLarge"/>
        <test duration="3753" status="passed" name="testProcess1000"/>
        <test duration="925" status="passed" name="testProcess100"/>
    </suite>
    <suite duration="94779" status="error" name="com.epam.android.benchmark.parser.ParserBenchmark[.MOSHI]">
        <test duration="12640" status="passed" name="testParse10000"/>
        <test duration="79726" status="passed" name="testParseLittleMemory50000"/>
        <test duration="1640" status="passed" name="testParse1000"/>
        <test duration="25" status="passed" name="testInit"/>
        <test duration="362" status="error" name="testParseLittleMemory100000">
            <output type="stderr">java.io.FileNotFoundException: /mnt/sdcard/benchmark/source_100000.json: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.IoBridge.open(IoBridge.java:406)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:105)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStreamFromFile(TestUtils.java:44)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStream(TestUtils.java:35)&#13;
at com.epam.android.benchmark.parser.ParserBenchmark.testParseLittleMemory100000(ParserBenchmark.java:62)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:511)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1574)&#13;
Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.Posix.open(Native Method)&#13;
at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)&#13;
at libcore.io.IoBridge.open(IoBridge.java:390)&#13;
... 42 more&#13;
</output>
        </test>
        <test duration="386" status="passed" name="testParse100"/>
    </suite>
    <suite duration="58649" status="error" name="com.epam.android.benchmark.parser.ParserBenchmark[.JACKSON]">
        <test duration="8534" status="passed" name="testParse10000"/>
        <test duration="50114" status="passed" name="testParseLittleMemory50000"/>
        <test duration="0" status="passed" name="testParse1000"/>
        <test duration="0" status="passed" name="testInit"/>
        <test duration="1" status="error" name="testParseLittleMemory100000">
            <output type="stderr">java.io.FileNotFoundException: /mnt/sdcard/benchmark/source_100000.json: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.IoBridge.open(IoBridge.java:406)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:105)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStreamFromFile(TestUtils.java:44)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStream(TestUtils.java:35)&#13;
at com.epam.android.benchmark.parser.ParserBenchmark.testParseLittleMemory100000(ParserBenchmark.java:62)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:511)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1574)&#13;
Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.Posix.open(Native Method)&#13;
at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)&#13;
at libcore.io.IoBridge.open(IoBridge.java:390)&#13;
... 42 more&#13;
</output>
        </test>
        <test duration="0" status="passed" name="testParse100"/>
    </suite>
    <suite duration="111340" status="error" name="com.epam.android.benchmark.parser.ParserBenchmark[.XCORE]">
        <test duration="11883" status="passed" name="testParse10000"/>
        <test duration="96681" status="passed" name="testParseLittleMemory50000"/>
        <test duration="1999" status="passed" name="testParse1000"/>
        <test duration="0" status="passed" name="testInit"/>
        <test duration="307" status="error" name="testParseLittleMemory100000">
            <output type="stderr">java.io.FileNotFoundException: /mnt/sdcard/benchmark/source_100000.json: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.IoBridge.open(IoBridge.java:406)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:78)&#13;
at java.io.FileInputStream.&amp;lt;init&amp;gt;(FileInputStream.java:105)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStreamFromFile(TestUtils.java:44)&#13;
at com.epam.android.benchmark.TestUtils.getJsonInputStream(TestUtils.java:35)&#13;
at com.epam.android.benchmark.parser.ParserBenchmark.testParseLittleMemory100000(ParserBenchmark.java:62)&#13;
at java.lang.reflect.Method.invokeNative(Native Method)&#13;
at java.lang.reflect.Method.invoke(Method.java:511)&#13;
at com.squareup.burst.BurstMethod$1.runReflectiveCall(BurstMethod.java:24)&#13;
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)&#13;
at com.squareup.burst.BurstMethod.invokeExplosively(BurstMethod.java:27)&#13;
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)&#13;
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)&#13;
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)&#13;
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runners.Suite.runChild(Suite.java:128)&#13;
at org.junit.runners.Suite.runChild(Suite.java:27)&#13;
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)&#13;
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)&#13;
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)&#13;
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)&#13;
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)&#13;
at org.junit.runners.ParentRunner.run(ParentRunner.java:363)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:137)&#13;
at org.junit.runner.JUnitCore.run(JUnitCore.java:115)&#13;
at android.support.test.internal.runner.TestExecutor.execute(TestExecutor.java:54)&#13;
at android.support.test.runner.AndroidJUnitRunner.onStart(AndroidJUnitRunner.java:240)&#13;
at android.app.Instrumentation$InstrumentationThread.run(Instrumentation.java:1574)&#13;
Caused by: libcore.io.ErrnoException: open failed: ENOENT (No such file or directory)&#13;
at libcore.io.Posix.open(Native Method)&#13;
at libcore.io.BlockGuardOs.open(BlockGuardOs.java:110)&#13;
at libcore.io.IoBridge.open(IoBridge.java:390)&#13;
... 42 more&#13;
</output>
        </test>
        <test duration="470" status="passed" name="testParse100"/>
    </suite>
    <suite duration="16763" status="passed" name="com.epam.android.benchmark.parser.ParserTest[.MOSHI]">
        <test duration="12497" status="passed" name="testCount10000"/>
        <test duration="392" status="passed" name="testIndexesCorrect"/>
        <test duration="1816" status="passed" name="testParserListener"/>
        <test duration="443" status="passed" name="testCount100"/>
        <test duration="1615" status="passed" name="testCount1000"/>
    </suite>
    <suite duration="10161" status="passed" name="com.epam.android.benchmark.parser.ParserTest[.JACKSON]">
        <test duration="6768" status="passed" name="testCount10000"/>
        <test duration="444" status="passed" name="testIndexesCorrect"/>
        <test duration="1291" status="passed" name="testParserListener"/>
        <test duration="498" status="passed" name="testCount100"/>
        <test duration="1160" status="passed" name="testCount1000"/>
    </suite>
    <suite duration="22388" status="passed" name="com.epam.android.benchmark.parser.ParserTest[.XCORE]">
        <test duration="17147" status="passed" name="testCount10000"/>
        <test duration="429" status="passed" name="testIndexesCorrect"/>
        <test duration="2362" status="passed" name="testParserListener"/>
        <test duration="453" status="passed" name="testCount100"/>
        <test duration="1997" status="passed" name="testCount1000"/>
    </suite>
    <suite duration="2202" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.SIMPLE]">
        <test duration="753" status="passed" name="testGet"/>
        <test duration="60" status="passed" name="testInit"/>
        <test duration="691" status="passed" name="testSave"/>
        <test duration="698" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="2457" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.ORMLITE]">
        <test duration="909" status="passed" name="testGet"/>
        <test duration="59" status="passed" name="testInit"/>
        <test duration="705" status="passed" name="testSave"/>
        <test duration="784" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="1850" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.REALM]">
        <test duration="576" status="passed" name="testGet"/>
        <test duration="86" status="passed" name="testInit"/>
        <test duration="630" status="passed" name="testSave"/>
        <test duration="558" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="1959" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.GREEN_DAO]">
        <test duration="700" status="passed" name="testGet"/>
        <test duration="55" status="passed" name="testInit"/>
        <test duration="562" status="passed" name="testSave"/>
        <test duration="642" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="3327" status="passed" name="com.epam.android.benchmark.storage.StorageBenchmark[.XCORE]">
        <test duration="946" status="passed" name="testGet"/>
        <test duration="84" status="passed" name="testInit"/>
        <test duration="1005" status="passed" name="testSave"/>
        <test duration="1292" status="passed" name="testGetFiltered"/>
    </suite>
    <suite duration="1205" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.SIMPLE]">
        <test duration="368" status="passed" name="testFilterActive"/>
        <test duration="112" status="passed" name="testGetFirst"/>
        <test duration="110" status="passed" name="testFilterIndex"/>
        <test duration="166" status="passed" name="testClear"/>
        <test duration="139" status="passed" name="testSize"/>
        <test duration="200" status="passed" name="testSaveTwice"/>
        <test duration="110" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="1087" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.ORMLITE]">
        <test duration="111" status="passed" name="testFilterActive"/>
        <test duration="139" status="passed" name="testGetFirst"/>
        <test duration="113" status="passed" name="testFilterIndex"/>
        <test duration="164" status="passed" name="testClear"/>
        <test duration="139" status="passed" name="testSize"/>
        <test duration="311" status="passed" name="testSaveTwice"/>
        <test duration="110" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="608" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.REALM]">
        <test duration="111" status="passed" name="testFilterActive"/>
        <test duration="114" status="passed" name="testGetFirst"/>
        <test duration="110" status="passed" name="testFilterIndex"/>
        <test duration="163" status="passed" name="testClear"/>
        <test duration="109" status="passed" name="testSize"/>
        <test duration="0" status="passed" name="testSaveTwice"/>
        <test duration="1" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="0" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.GREEN_DAO]">
        <test duration="0" status="passed" name="testFilterActive"/>
        <test duration="0" status="passed" name="testGetFirst"/>
        <test duration="0" status="passed" name="testFilterIndex"/>
        <test duration="0" status="passed" name="testClear"/>
        <test duration="0" status="passed" name="testSize"/>
        <test duration="0" status="passed" name="testSaveTwice"/>
        <test duration="0" status="passed" name="testFilterNullName"/>
    </suite>
    <suite duration="0" status="passed" name="com.epam.android.benchmark.storage.StorageTest[.XCORE]">
        <test duration="0" status="passed" name="testFilterActive"/>
        <test duration="0" status="passed" name="testGetFirst"/>
        <test duration="0" status="passed" name="testFilterIndex"/>
        <test duration="0" status="passed" name="testClear"/>
        <test duration="0" status="passed" name="testSize"/>
        <test duration="0" status="passed" name="testSaveTwice"/>
        <test duration="0" status="passed" name="testFilterNullName"/>
    </suite>
</testrun>
